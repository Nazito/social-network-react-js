{"version":3,"sources":["hok/auchRedirect.js","components/main-content-components/profile-component/my-posts-component/post-component/Post.module.css","components/main-content-components/profile-component/my-posts-component/post-component/Post.jsx","components/main-content-components/profile-component/my-posts-component/MyPosts.jsx","components/main-content-components/profile-component/my-posts-component/MyPostsContainer.jsx","components/main-content-components/profile-component/my-posts-component/profile-status-component/ProfileStatus.jsx","components/main-content-components/profile-component/my-posts-component/profile-status-component/ProfileStatusWichHooks.jsx","components/main-content-components/profile-component/my-posts-component/profile-info-component/ProfileInfo.jsx","components/main-content-components/profile-component/Profile.jsx","components/main-content-components/profile-component/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuch","authReducer","WichAuchRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","classes","item","message","like","maxLength10","maxLengthCreatore","MyPosts","memo","console","log","postItems","posts","reverse","map","p","key","id","src","alt","AddPostFormRedux","onSubmit","v","onAddPost","newPostText","reduxForm","form","action","handleSubmit","Field","component","Textarea","name","placeholder","validate","requiredField","MyPostsContainer","profilePage","dispatch","addPostActionCreator","ProfileStatusWichHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","autoFocus","onChange","e","currentTarget","value","updateStatus","ProfileInfo","profile","photos","large","noneUserImg","PreLoaderComponent","Profile","ProfileContainer","userId","match","params","authoriedUserId","history","push","getUserProfile","getUserStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.52e27ea6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = state => ({\r\n  isAuch: state.authReducer.isAuch\r\n});\r\n\r\nexport const WichAuchRedirect = Component => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuch) {\r\n        return <Redirect to=\"/login\" />;\r\n      }\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuchRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuchRedirectComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3q-Kq\"};","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\n\r\nconst Post = props => {\r\n  return (\r\n    <div className={classes.item}>\r\n      {props.message}\r\n      <span>{props.like}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React, { memo } from \"react\";\r\nimport Post from \"./post-component/Post\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  requiredField,\r\n  maxLengthCreatore,\r\n} from \"../../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../../commons/formControls/formsControl\";\r\n\r\nconst maxLength10 = maxLengthCreatore(10);\r\nconst MyPosts = React.memo((props) => {\r\n  console.log(\"44\");\r\n  let postItems = [...props.posts].reverse().map((p) => {\r\n    return <Post message={p.message} like={p.like} key={p.id} />;\r\n  });\r\n\r\n  let addNewPost = (v) => {\r\n    props.onAddPost(v.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      my posts\r\n      <img\r\n        src=\"http://s1.iconbird.com/ico/2014/1/567/w512h5121389807811officeaddressbookicon.png\"\r\n        alt=\"\"\r\n      />\r\n      <AddPostFormRedux onSubmit={addNewPost} />\r\n      {postItems}\r\n    </div>\r\n  );\r\n});\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form action=\"\" onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={Textarea}\r\n        name=\"newPostText\"\r\n        placeholder=\"enter your post\"\r\n        validate={[requiredField, maxLength10]}\r\n      />\r\n      <button>SEND</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({ form: \"profileAddPostForm\" })(AddPostForm);\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport { addPostActionCreator } from \"../../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nlet mapDispachToProps = (dispatch) => {\r\n  return {\r\n    onAddPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispachToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport classes from \"./ProfileStatus.module.css\";\r\nimport PreLoaderComponent from \"../../../../commons/preLoader/PreLoaderComponent\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n  state = {\r\n    editMode: false,\r\n    status: this.props.status,\r\n  };\r\n\r\n  activateAditMode = () => {\r\n    this.setState({ editMode: true });\r\n  };\r\n\r\n  deactivateAditMode = () => {\r\n    this.setState({ editMode: false });\r\n    this.props.updateStatus(this.state.status);\r\n  };\r\n\r\n  onStatusChange = (e) => {\r\n    this.setState({\r\n      status: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.status !== this.props.status) {\r\n      this.setState({\r\n        status: this.props.status,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {!this.state.editMode && (\r\n          <div>\r\n            <span>{this.props.status || \"no status\"}</span>\r\n            <button onClick={this.activateAditMode}>edit</button>\r\n          </div>\r\n        )}\r\n\r\n        {this.state.editMode && (\r\n          <div>\r\n            <input onChange={this.onStatusChange} value={this.state.status} />\r\n            <button onClick={this.deactivateAditMode}>ok</button>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React from \"react\";\r\nimport classes from \"./ProfileStatus.module.css\";\r\nimport PreLoaderComponent from \"../../../../commons/preLoader/PreLoaderComponent\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst ProfileStatusWichHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n  return (\r\n    <>\r\n      {!editMode && (\r\n        <div>\r\n          <span>{props.status || \"no status\"}</span>\r\n          <button onClick={activateEditMode}>edit</button>\r\n        </div>\r\n      )}\r\n\r\n      {editMode && (\r\n        <div>\r\n          <input autoFocus={true} onChange={onStatusChange} value={status} />\r\n          <button onClick={deactivateEditMode}>ok</button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWichHooks;\r\n","import React from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport PreLoaderComponent from \"../../../../commons/preLoader/PreLoaderComponent\";\r\nimport noneUserImg from \"../../../../../assets/img/computer-icons-user-profile-clip-art-png-favpng-MtANWqcpdGATjaV7qwJpkYcdq.jpg\";\r\nimport ProfileStatus from \"../profile-status-component/ProfileStatus\";\r\nimport ProfileStatusWichHooks from \"../profile-status-component/ProfileStatusWichHooks\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n  if (!profile) {\r\n    return <PreLoaderComponent />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img src=\"https://cdn.arstechnica.net/wp-content/uploads/2016/02/5718897981_10faa45ac3_b-640x624.jpg\" />\r\n      </div>\r\n\r\n      <div>\r\n        <img src={profile.photos.large ? profile.photos.large : noneUserImg} />\r\n        <ProfileStatusWichHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport classes from \"./Profile.module.css\";\r\nimport MyPostsContainer from \"./my-posts-component/MyPostsContainer\";\r\nimport ProfileInfo from \"./my-posts-component/profile-info-component/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  getUserStatus,\r\n  updateStatus,\r\n} from \"../../../redux/profile-reducer\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport { WichAuchRedirect } from \"../../../hok/auchRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authoriedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"login\");\r\n      }\r\n    }\r\n\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authoriedUserId: state.authReducer.id,\r\n  isAuch: state.authReducer.isAuch,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getUserStatus, updateStatus }),\r\n  withRouter,\r\n  WichAuchRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}