{"version":3,"sources":["hok/auchRedirect.js","components/main-content-components/dialogs-component/Dialogs.module.css","components/main-content-components/dialogs-component/dialog-item-component/DialogItem.jsx","components/main-content-components/dialogs-component/messages-item-component/MessagesItem.jsx","components/main-content-components/dialogs-component/Dialogs.jsx","components/main-content-components/dialogs-component/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuch","authReducer","WichAuchRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","className","classes","dialog","active","id","name","MessagesItem","messages_item","message","maxLength10","maxLengthCreatore","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","requiredField","Dialogs","messageItems","stateMesaages","messages","map","m","key","dialogItems","dialogs","d","dialogsItems","v","addMessage","newMessageText","compose","messagesPage","dispatch","addMessageActionCreator"],"mappings":"0OAIIA,EAA6B,SAAAC,GAAK,MAAK,CACzCC,OAAQD,EAAME,YAAYD,SAGfE,EAAmB,SAAAC,GAAc,IACtCC,EADqC,iLAGvC,OAAKC,KAAKC,MAAMN,OAGT,kBAACG,EAAcE,KAAKC,OAFlB,kBAAC,IAAD,CAAUC,GAAG,eAJiB,GACXC,IAAML,WAatC,OAJqCM,YAAQX,EAARW,CACnCL,K,oBClBJM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,4B,6JCWhKC,EARI,SAAAN,GACjB,OACE,yBAAKO,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,QAC7C,kBAAC,IAAD,CAAST,GAAI,YAAcD,EAAMW,IAAKX,EAAMY,Q,kBCAnCC,EAJM,SAAAb,GACnB,OAAO,yBAAKO,UAAWC,IAAQM,eAAgBd,EAAMe,U,iCCOjDC,EAAcC,YAAkB,IAwChCC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAfL,SAACnB,GACtB,OACE,0BAAMqB,SAAUrB,EAAMsB,cACpB,kBAACC,EAAA,EAAD,CACEC,UAAWC,IACXb,KAAK,iBACLc,YAAY,qBACZC,SAAU,CAACC,IAAeZ,KAG5B,4CASSa,EA1CC,SAAC7B,GACf,IAAI8B,EAAe9B,EAAM+B,cAAcC,SAASC,KAAI,SAACC,GACnD,OAAO,kBAAC,EAAD,CAAcnB,QAASmB,EAAEnB,QAASoB,IAAKD,EAAEvB,QAG9CyB,EAAcpC,EAAM+B,cAAcM,QAAQJ,KAAI,SAACK,GACjD,OAAO,kBAAC,EAAD,CAAY1B,KAAM0B,EAAE1B,KAAMD,GAAG,IAAIwB,IAAKG,EAAE3B,QAOjD,OACE,yBAAKJ,UAAWC,IAAQ6B,SACtB,yBAAK9B,UAAWC,IAAQ+B,cAAeH,GAEvC,yBAAK7B,UAAWC,IAAQwB,UAAWF,GACnC,kBAACZ,EAAD,CAAqBG,SATL,SAACmB,GACnBxC,EAAMyC,WAAWD,EAAEE,qB,wBCFRC,sBACbxC,aAfoB,SAACV,GACrB,MAAO,CACLsC,cAAetC,EAAMmD,iBAID,SAACC,GACvB,MAAO,CACLJ,WAAY,SAACC,GACXG,EAASC,YAAwBJ,SAOrC9C,IAFa+C,CAGbd","file":"static/js/4.24a2c144.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = state => ({\r\n  isAuch: state.authReducer.isAuch\r\n});\r\n\r\nexport const WichAuchRedirect = Component => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuch) {\r\n        return <Redirect to=\"/login\" />;\r\n      }\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuchRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuchRedirectComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Gj-r\",\"dialogsItems\":\"Dialogs_dialogsItems__1t4lN\",\"dialog\":\"Dialogs_dialog__1tbk-\",\"active\":\"Dialogs_active__SxKss\",\"messages\":\"Dialogs_messages__FB_qh\"};","import React from \"react\";\r\nimport classes from \"./DialogItem.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = props => {\r\n  return (\r\n    <div className={classes.dialog + \" \" + classes.active}>\r\n      <NavLink to={\"/message/\" + props.id}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport classes from \"./MessagesItem.module.css\";\r\n\r\nconst MessagesItem = props => {\r\n  return <div className={classes.messages_item}>{props.message}</div>;\r\n};\r\n\r\nexport default MessagesItem;\r\n","import React, { createRef } from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./dialog-item-component/DialogItem\";\r\nimport MessagesItem from \"./messages-item-component/MessagesItem\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../commons/formControls/formsControl\";\r\nimport {\r\n  maxLengthCreatore,\r\n  requiredField,\r\n} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength10 = maxLengthCreatore(10);\r\n\r\nconst Dialogs = (props) => {\r\n  let messageItems = props.stateMesaages.messages.map((m) => {\r\n    return <MessagesItem message={m.message} key={m.id} />;\r\n  });\r\n\r\n  let dialogItems = props.stateMesaages.dialogs.map((d) => {\r\n    return <DialogItem name={d.name} id=\"3\" key={d.id} />;\r\n  });\r\n\r\n  let addNewMessage = (v) => {\r\n    props.addMessage(v.newMessageText);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <div className={classes.dialogsItems}>{dialogItems}</div>\r\n\r\n      <div className={classes.messages}>{messageItems}</div>\r\n      <AddMessageFormRedux onSubmit={addNewMessage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={Textarea}\r\n        name=\"newMessageText\"\r\n        placeholder=\"enter your message\"\r\n        validate={[requiredField, maxLength10]}\r\n      />\r\n\r\n      <button>send</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(\r\n  AddMessageForm\r\n);\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { addMessageActionCreator } from \"../../../redux/message-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { WichAuchRedirect } from \"../../../hok/auchRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    stateMesaages: state.messagesPage,\r\n  };\r\n};\r\n\r\nlet mapDispachToProps = (dispatch) => {\r\n  return {\r\n    addMessage: (newMessageText) => {\r\n      dispatch(addMessageActionCreator(newMessageText));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispachToProps),\r\n  WichAuchRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}